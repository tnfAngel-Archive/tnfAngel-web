{
  "version": 3,
  "sources": ["../../src/server.ts"],
  "sourcesContent": ["export {};\n\n// External imports\nimport express, {\n\tjson as jsonMW,\n\turlencoded as urlencodedMW,\n\tstatic as expressStatic\n} from 'express';\nimport { createServer as httpServer } from 'http';\nimport { join as joinPath } from 'path';\nimport morgan from 'morgan';\n\n// Local imports\nimport { notFoundMW } from './middlewares/notFound.middleware';\nimport { errorHandler } from './handlers/errorHandler.handler';\n\n// External Typings imports\nimport type { Request, Response } from 'express';\n\n// App & Server\nconst app = express();\nconst server = httpServer(app);\nconst port = process.env.PORT ?? 3000;\n\n// App settings\napp.set('port', port);\napp.set('json spaces', 2);\napp.set('trust proxy', true);\n\n// Middlewares\napp.use(morgan('dev'));\napp.use(jsonMW());\napp.use(\n\turlencodedMW({\n\t\textended: false\n\t})\n);\n\n// Path Middlewares\napp.use('/static', expressStatic(joinPath(__dirname, './static')));\napp.use('/assets', expressStatic(joinPath(__dirname, './static/assets')));\n\n// Routes\napp.get('/', (_req: Request, res: Response): void => {\n\tres.sendFile(joinPath(__dirname, './static/html/index.html'));\n});\napp.get('/projects', (_req: Request, res: Response): void => {\n\tres.sendFile(joinPath(__dirname, './static/html/building.html'));\n});\napp.get(\n\t'/projects/arduino-bluetooth-car',\n\t(_req: Request, res: Response): void => {\n\t\tres.sendFile(\n\t\t\tjoinPath(\n\t\t\t\t__dirname,\n\t\t\t\t'./static/html/projects/arduino-bluetooth-car.html'\n\t\t\t)\n\t\t);\n\t}\n);\napp.get('/github', (_req: Request, res: Response): void => {\n\tres.redirect('https://github.com/tnfAngel');\n});\napp.get('/discord', (_req: Request, res: Response): void => {\n\tres.redirect('https://discord.gg/8RNAdpK');\n});\n\n// Robots\napp.get('/robots.txt', (_req: Request, res: Response): void => {\n\tres.sendFile('static/assets/robots.txt', { root: __dirname });\n});\n\n// Sitemap\napp.get('/sitemap.xml', (_req: Request, res: Response): void => {\n\tres.sendFile('static/assets/sitemap.xml', { root: __dirname });\n});\n\napp.get('*', notFoundMW);\n\napp.use(errorHandler);\n\n// Starting the server\nserver.listen(app.get('port'), (): void => {\n\tconsole.log('==== Server ready ====');\n\tconsole.log(`Port: ${app.get('port')}`);\n\tconsole.log(`Environment: ${process.env.NODE_ENV}`);\n\tconsole.log(`Node version: ${process.version}`);\n\tconsole.log(`Visit: http://localhost:${app.get('port')}`);\n\tconsole.log('==== End Server ready ====');\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAGA,qBAIO;AACP,kBAA2C;AAC3C,kBAAiC;AACjC,oBAAmB;AAGnB,sBAA2B;AAC3B,0BAA6B;AAM7B,MAAM,MAAM;AACZ,MAAM,SAAS,8BAAW;AAC1B,MAAM,OAAO,QAAQ,IAAI,QAAQ;AAGjC,IAAI,IAAI,QAAQ;AAChB,IAAI,IAAI,eAAe;AACvB,IAAI,IAAI,eAAe;AAGvB,IAAI,IAAI,2BAAO;AACf,IAAI,IAAI;AACR,IAAI,IACH,+BAAa;AAAA,EACZ,UAAU;AAAA;AAKZ,IAAI,IAAI,WAAW,2BAAc,sBAAS,WAAW;AACrD,IAAI,IAAI,WAAW,2BAAc,sBAAS,WAAW;AAGrD,IAAI,IAAI,KAAK,CAAC,MAAe,QAAwB;AACpD,MAAI,SAAS,sBAAS,WAAW;AAAA;AAElC,IAAI,IAAI,aAAa,CAAC,MAAe,QAAwB;AAC5D,MAAI,SAAS,sBAAS,WAAW;AAAA;AAElC,IAAI,IACH,mCACA,CAAC,MAAe,QAAwB;AACvC,MAAI,SACH,sBACC,WACA;AAAA;AAKJ,IAAI,IAAI,WAAW,CAAC,MAAe,QAAwB;AAC1D,MAAI,SAAS;AAAA;AAEd,IAAI,IAAI,YAAY,CAAC,MAAe,QAAwB;AAC3D,MAAI,SAAS;AAAA;AAId,IAAI,IAAI,eAAe,CAAC,MAAe,QAAwB;AAC9D,MAAI,SAAS,4BAA4B,EAAE,MAAM;AAAA;AAIlD,IAAI,IAAI,gBAAgB,CAAC,MAAe,QAAwB;AAC/D,MAAI,SAAS,6BAA6B,EAAE,MAAM;AAAA;AAGnD,IAAI,IAAI,KAAK;AAEb,IAAI,IAAI;AAGR,OAAO,OAAO,IAAI,IAAI,SAAS,MAAY;AAC1C,UAAQ,IAAI;AACZ,UAAQ,IAAI,SAAS,IAAI,IAAI;AAC7B,UAAQ,IAAI,gBAAgB,QAAQ,IAAI;AACxC,UAAQ,IAAI,iBAAiB,QAAQ;AACrC,UAAQ,IAAI,2BAA2B,IAAI,IAAI;AAC/C,UAAQ,IAAI;AAAA;",
  "names": []
}
